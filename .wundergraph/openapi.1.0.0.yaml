openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/TruthShield/customer-portal/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/TruthShield/Test/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/TruthShield/CustomerPortal/1.0.0
info:
  description: This is the Truth Shield customer portal API.
  version: "1.0.0"
  title: Truth Shield customer portal API
  contact:
    email: matthew.cochran@truthshield.io
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: private
    description: Authenticated operations available to regular developers
  - name: public
    description: Non-authenticated operations available to regular developers
paths:
  /portal:
    get:
      tags:
        - private
      summary: gets account status
      operationId: searchAccount
      description: get the account details for a customer and company
      responses:
        '200':
          description: results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/portal'
        '400':
          description: bad input parameter
    post:
      tags:
        - private
      summary: Administer portal
      operationId: administer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ack'
        '400':
          description: Invalid Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/administerCommand'
        description: order placed for purchasing the pet
        required: true   
  /admin-requests:
    get:
      tags:
        - private
      summary: gets all requests
      operationId: searchRequests
      description: get requests for the super admin
      responses:
        '200':
          description: results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/request'
        '400':
          description: bad input parameter
components:
  schemas:
    product:
      title: Product
      required:
        - id
        - name
        - roles
      type: object
      properties:
        id:
          title: Properties
          type: string
          description: the unique identifier for the product generated by the application
          format: uuid
        name:
          title: name
          type: string
        subscriptionIds:
          title: SubscriptionIds
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/productRole'
      description: 'The product being researched, developed, extended, or managed'
    productRole:
      title: ProductRole
      required:
        - name
        - description
        - userCap
      type: object
      properties:
        name:
          title: name
          type: string
        description:
          title: description
          type: string
        userCap:
          title: userCap
          type: number
    metadata:
      title: metadata
      type: object
      properties:
        name:
          title: name
          type: string
        type:
          title: type
          type: string
        value:
          title: value
          type: string
    recurring:
      title: recurring
      required:
        - aggregate_usage
        - interval
        - interval_count
        - usage_type
      type: object
      properties:
        aggregate_usage:
          title: aggregate_usage
          type: string
        interval:
          title: interval
          type: string
        interval_count:
          title: interval_count
          type: number
        usage_type:
          title: usage_type
          type: string
    price:
      title: Price
      required:
        - id
        - active
        - billing_scheme
        - created
        - lookup_key
        - metadata
        - nickname
        - productId
        - externalProductId
        - recurring
        - tax_behavior
        - unit_amount
      type: object
      properties:
        id:
          title: id
          type: string
          format: uuid
        active:
          title: active
          type: boolean
        billing_scheme:
          title: billing_scheme
          type: string
        created:
          title: created
          type: string
          format: date-time
        lookup_key:
          title: lookup_key
          type: string
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/metadata'
        nickname:
          title: nickname
          type: string
        productId:
          title: productId
          type: string
          format: uuid
        externalProductId:
          title: externalProductId
          type: string
        recurring:
          title: recurring
          type: object
        tax_behavior:
          title: tax_behavior
          type: string
        unit_amount:
          title: unit_amount
          type: number
    subscriptionItem:
      title: SubscriptionItem
      required:
        - id
        - created
        - metadata
        - price
        - quantity
        - subscription
      type: object
      properties:
        id:
          title: id
          type: string
          format: uuid
        created:
          title: created
          type: number
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/metadata'
        price:
          title: price
        quantity:
          title: quantity
          type: number
        subscription:
          title: subscription
          type: string
    subscription:
      title: subscription
      required:
        - id
        - application
        - status
        - cancelAt
        - cancelAtPeriodEnd
        - canceledAt
        - collectionMethod
        - created
        - createdByUserId
        - currentPeriodEnd
        - currentPeriodStart
        - daysUntilDueue
        - description
        - discount
        - endedAt
        - currency
        - type
        - items
      type: object
      properties:
        id:
          title: id
          type: string
          format: uuid
        application:
          title: application
          type: string
        status:
          title: status
          type: string
        cancelAt:
          title: cancelAt
          type: string
          format: date-time
        cancelAtPeriodEnd:
          title: cancelAtPeriodEnd
          type: boolean
        canceledAt:
          title: canceledAt
          type: string
          format: date-time
        collectionMethod:
          title: collectionMethod
          type: string
        created:
          title: created
          type: string
          format: date-time
        createdByUserId:
          title: createdByUserId
          type: string
        currentPeriodEnd:
          title: currentPeriodEnd
          type: string
          format: date-time
        currentPeriodStart:
          title: currentPeriodStart
          type: string
          format: date-time
        daysUntilDueue:
          title: daysUntilDueue
          type: number
        description:
          title: description
          type: string
        discount:
          title: discount
          type: string
        endedAt:
          title: endedAt
          type: string
          format: date-time
        currency:
          title: currency
          type: string
        type:
          title: type
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/subscriptionItem'
    role:
      title: Role
      required:
        - productId
        - roles
      type: object
      properties:
        productId:
          title: productId
          type: string
          format: uuid
        roles:
          title: roles
          type: array
          items:
            type: string
    ack:
      type: object
      properties:
        success:
          title: success
          type: boolean
        messages:
          title: messages
          type: array
          items:
            type: string
    administerCommand:
      title: AdministerCommand
      type: object
      properties:
        addUser:
          type: array
          items:
            $ref: '#/components/schemas/user'
        userActions:
          type: array
          items:
            $ref: '#/components/schemas/userActionCommand'
    userActionCommand:
      title: addUserCommand
      type: object
      properties:
        userId:
          title: userId
          type: string
          format: uuid
        actions:
          title: actions
          type: array
          items:
            type: string
    user:
      title: User
      required:
        - id
        - firstName
        - lastName
        - email
        - status
        - roles
      type: object
      properties:
        id:
          title: id
          type: string
          format: uuid
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        email:
          title: email
          type: string
          format: email
        status:
          title: status
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/role'
    request:
      title: Request
      required:
        - id
        - type
        - title
        - imageUrl
        - timestamp
        - cost
        - recurring
        - note
        - userId
        - statusId
        - statusTitle
        - typeId
        - typeTitle
        - productId
        - actions
      type: object
      properties:
        id:
          title: id
          type: string
          format: uuid
        type:
          title: type
          type: string
        title:
          title: title
          type: string
        imageUrl:
          title: imageUrl
          type: string
          format: uri
        timestamp:
          title: timestamp
          type: string
          format: date-time
        cost:
          title: cost
          type: string
        recurring:
          title: recurring
          type: string
        note:
          title: note
          type: string
        userId:
          title: userId
          type: string
          format: uuid
        statusId:
          title: statusId
          type: string
        statusTitle:
          title: statusTitle
          type: string
        typeId:
          title: typeId
          type: string
        typeTitle:
          title: typeTitle
          type: string
        productId:
          title: productId
          type: string
          format: uuid
        actions:
          type: array
          items:
            $ref: '#/components/schemas/requestAction'
    requestAction:
      required:
        - key
        - description
        - reasonNeeded
      type: object
      properties:
        key:
          title: key
          type: string
        description:
          title: description
          type: string
        reasonNeeded:
          title: reasonNeeded
          type: boolean
    actionRequest:
      required:
        - action
      type: object
      properties:
        requestId:
          title: requestId
          type: string
          format: uuid
        action:
          title: action
          type: string
        reason:
          title: reason
          type: string
    userInvitation:
      title: UserInvitation
      required:
        - email
        - phone
        - access
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        phone:
          title: Phone
          type: string
        access:
          type: array
          items:
            $ref: '#/components/schemas/role'
    portal:
      title: Portal
      required:
        - companyId
        - products
        - subscriptions
        - users
        - requests
        - actionRequests
        - userInvitations
        - payments
      type: object
      properties:
        companyId:
          title: companyId
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: '#/components/schemas/product'
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/subscription'
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/request'
        actionRequests:
          type: array
          items:
            $ref: '#/components/schemas/actionRequest'
        userInvitations:
          type: array
          items:
            $ref: '#/components/schemas/userInvitation'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/payment'
    payment:
      title: Payment
      required:
        - id
        - amount
        - timestamp
      type: object
      properties:
        id:
          title: id
          type: string
          format: uuid
        amount:
          title: amount
          type: number
        timestamp:
          title: timestamp
          type: string
          format: date-time