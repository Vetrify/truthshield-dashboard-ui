// Code generated by wunderctl. DO NOT EDIT.

import { JSONSchema7 } from "json-schema";

interface Schema {
	FakeAdminPortal: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	FakeWeather: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	PastLaunches: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	ProtectedWeather: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	Weather: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
}

const jsonSchema: Schema = {
	FakeAdminPortal: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						getCityByName: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								weather: {
									type: "object",
									properties: {
										summary: {
											type: "object",
											properties: { title: { type: "string" }, description: { type: "string" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	FakeWeather: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						getCityByName: {
							type: "object",
							properties: {
								id: { type: "string" },
								name: { type: "string" },
								weather: {
									type: "object",
									properties: {
										summary: {
											type: "object",
											properties: { title: { type: "string" }, description: { type: "string" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	PastLaunches: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						launchesPast: {
							type: "array",
							items: {
								type: "object",
								properties: {
									mission_name: { type: "string" },
									launch_date_local: { type: "string" },
									launch_site: {
										type: "object",
										properties: { site_name_long: { type: "string" } },
										additionalProperties: false,
									},
									links: {
										type: "object",
										properties: { article_link: { type: "string" }, video_link: { type: "string" } },
										additionalProperties: false,
									},
									rocket: {
										type: "object",
										properties: {
											rocket_name: { type: "string" },
											first_stage: {
												type: "object",
												properties: {
													cores: {
														type: "array",
														items: {
															type: "object",
															properties: {
																flight: { type: "integer" },
																core: {
																	type: "object",
																	properties: { reuse_count: { type: "integer" }, status: { type: "string" } },
																	additionalProperties: false,
																},
															},
															additionalProperties: false,
														},
													},
												},
												additionalProperties: false,
											},
											second_stage: {
												type: "object",
												properties: {
													payloads: {
														type: "array",
														items: {
															type: "object",
															properties: {
																payload_type: { type: "string" },
																payload_mass_kg: { type: "number" },
																payload_mass_lbs: { type: "number" },
															},
															additionalProperties: false,
														},
													},
												},
												additionalProperties: false,
											},
										},
										additionalProperties: false,
									},
									ships: {
										type: "array",
										items: {
											type: "object",
											properties: {
												name: { type: "string" },
												home_port: { type: "string" },
												image: { type: "string" },
											},
											additionalProperties: false,
										},
									},
								},
								additionalProperties: false,
							},
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	ProtectedWeather: {
		input: {
			type: "object",
			properties: { forCity: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["forCity"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						getCityByName: {
							type: "object",
							properties: {
								name: { type: "string" },
								coord: {
									type: "object",
									properties: { lat: { type: "number" }, lon: { type: "number" } },
									additionalProperties: false,
								},
								weather: {
									type: "object",
									properties: {
										summary: {
											type: "object",
											properties: {
												title: { type: "string" },
												description: { type: "string" },
												icon: { type: "string" },
											},
											additionalProperties: false,
										},
										temperature: {
											type: "object",
											properties: { actual: { type: "number" }, min: { type: "number" }, max: { type: "number" } },
											additionalProperties: false,
										},
										wind: {
											type: "object",
											properties: { speed: { type: "number" }, deg: { type: "integer" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	Weather: {
		input: {
			type: "object",
			properties: { forCity: { type: "string" } },
			additionalProperties: false,
			definitions: {},
			required: ["forCity"],
		},
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						getCityByName: {
							type: "object",
							properties: {
								name: { type: "string" },
								coord: {
									type: "object",
									properties: { lat: { type: "number" }, lon: { type: "number" } },
									additionalProperties: false,
								},
								weather: {
									type: "object",
									properties: {
										summary: {
											type: "object",
											properties: {
												title: { type: "string" },
												description: { type: "string" },
												icon: { type: "string" },
											},
											additionalProperties: false,
										},
										temperature: {
											type: "object",
											properties: { actual: { type: "number" }, min: { type: "number" }, max: { type: "number" } },
											additionalProperties: false,
										},
										wind: {
											type: "object",
											properties: { speed: { type: "number" }, deg: { type: "integer" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
};
export default jsonSchema;
